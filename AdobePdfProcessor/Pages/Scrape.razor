@page "/scrape"
@using DataLibrary.DbAccess
@using DataLibrary.DbServices
@using DataLibrary.Models
@using DataLibrary.Services;
@using DataLibrary.Services.SDATScrapers
@inject IDataContext dataContext
@inject MontgomeryCountyScraper montgomeryCountyScraper
@inject CecilCountyScraper cecilCountyScraper
@inject MontgomeryCountyDataServiceFactory montgomeryCountyDataServiceFactory
@inject CecilCountyDataServiceFactory cecilCountyDataServiceFactory

<div class="row mb-3 mt-3">
    <div class="container">
        <div>
            <button class="btn btn-danger" type="submit" @onclick="(() => ScrapeMontgomeryCounty(_amountToScrape))">ScrapeMontgomeryCounty</button>
            <button class="btn btn-danger" type="submit" @onclick="(() => ScrapeCecilCounty(_amountToScrape))">ScrapeCecilCounty</button>
            @*<button class="btn btn-danger" type="submit" @onclick="CloseApp">CloseApp</button>*@
        </div>
    </div>
</div>

@code {
    private int _amountToScrape = 3;
    private async Task ScrapeMontgomeryCounty(int amountToScrape)
    {
        List<AddressModel> addressList;
        amountToScrape = _amountToScrape;
        using (var uow = dataContext.CreateUnitOfWork())
        {
            var montgomeryCountyDataService = montgomeryCountyDataServiceFactory.CreateGroundRentProcessorDataService(uow);
            addressList = await montgomeryCountyDataService.ReadTopAmountWhereIsGroundRentNull(amountToScrape);
        }
        montgomeryCountyScraper.AllocateWebDrivers(addressList, amountToScrape);
    }
    private async Task ScrapeCecilCounty(int amountToScrape)
    {
        List<AddressModel> addressList;
        amountToScrape = _amountToScrape;
        using (var uow = dataContext.CreateUnitOfWork())
        {
            var cecilCountyDataService = cecilCountyDataServiceFactory.CreateGroundRentProcessorDataService(uow);
            addressList = await cecilCountyDataService.ReadTopAmountWhereIsGroundRentNull(amountToScrape);
        }
        cecilCountyScraper.AllocateWebDrivers(addressList, amountToScrape);
    }
    private void CloseApp()
    {
        // Todo
    }
}
